pages:

	main page (changes for signed in/ not signed in)
	user show prof
	restaurant show
	write a review 
	search result page

features: 

user signin/signout and auth
	schema: 
		-fname 		(req)
		-mname
		-lname 		(req)
		-city 		(req)
		-state 		(req)
		-id
		-password digest
		-picture??
			later:
			-good
			-funny
			-inaccurate
	model:
		validations
	controller:
		new
		show
		edit
		delete

NO OWNER! just restaurant - and it belongs to a user

owner signin/sighout and auth 
	schema:
		-restaurant name 	(req)
		-address line 1
		-city 				(req)
		-state 				(req)
		-zip 				(req)
			later:
			-stars
			-tags (as an array?)
	model:
		validations
	controller:
		new
		show
		edit
		delete



user auth
owner auth
tags
email validation
search results
search filters
comments
comments on comments
following people/restaurants
notifications
weekly email with info about restaurants in your area


tuesday:	models and controllers. finish auth and tests.
				get rid of rvm
wednesday:	email verification and css layout.







todo: 

SEED:
[x] - seed people
[x] - seed restaurants
[x] - seed comments
[ ] - with not with lorem content

RESTAURANT SHOW PAGE:
[ ] - map flag defaults to their address
[ ] - fix the fact that everything has 5 stars by default

MAPBOOK:
[ ] - EVERYTHING

SEARCHBARS: 
[ ] - default in there, which leaves when it is clicked

CSS:
[ ] - get rid of single use classes

SIDEBAR:
[x] - switches between 
[ ] - populate the search bar
[ ] - have it actually filter

BACKBONE:
[ ] - use for search queries sorting
[ ] - signing in users
[ ] - keep the top bar statis on all pages

UJS:
[ ] - use for adding comments

INDEX: 
[ ] - make pictures quicker
[ ] - load pictures into seeds folder

VALIDATIONS:
[ ] - change rspecs to test for class, not id
[ ] - fix all of the breaks


ONCE EVERYTHING WORKS:
[ ] - user show page
[ ] - omniauth
[ ] - emailer
[ ] - error styling
[ ] - search for restaurants with autocomplete
[ ] - buttons to fill out forms













